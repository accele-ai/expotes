"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assetsRelation = exports.assetsTable = void 0;
const pg_core_1 = require("drizzle-orm/pg-core");
const drizzle_orm_1 = require("drizzle-orm");
const mainfest_1 = require("./mainfest");
exports.assetsTable = (0, pg_core_1.pgTable)("assets", {
    /* The ID MUST uniquely specify the manifest and MUST be a UUID. */
    id: (0, pg_core_1.uuid)("id").primaryKey(),
    manifestId: (0, pg_core_1.uuid)("manifest_id")
        .references(() => mainfest_1.manifestsTable.id)
        .notNull(),
    /*Key used to reference this asset from the update's application code.
    This key, for example, may be generated by a separate build step that processes the application code, such as a bundler.
    Key -> id
    */
    // key: varchar("key").notNull(),
    /* url: Location at which the file may be fetched.
    path here is minio bucket(assest) key*/
    path: (0, pg_core_1.varchar)("path").notNull(),
    /* The MIME type of the file as defined by RFC 2045.
    For example, application/javascript, image/jpeg. */
    contentType: (0, pg_core_1.varchar)("content_type").notNull(),
    /* Base64URL-encoded SHA-256 hash of the file to guarantee integrity.
    Base64URL encoding is defined by IETF RFC 4648. */
    hash: (0, pg_core_1.varchar)("hash"),
    /* The suggested extension to use when a file is saved on a client.
     Some platforms, such as iOS, require certain file types to be saved with an extension.
     The extension MUST be prefixed with a .. For example, .jpeg.
     In some cases, such as the launchAsset, this field will be ignored in favor of a locally determined extension.
     If the field is omitted and there is no locally stipulated extension, the asset will be saved without an extension.
     For example, ./filename with no . at the end.
     A conforming client SHOULD prefix a file extension with a . if a file extension is not empty and missing the . prefix. */
    fileExtension: (0, pg_core_1.varchar)("file_extension"),
});
exports.assetsRelation = (0, drizzle_orm_1.relations)(exports.assetsTable, ({ one }) => ({
    manifest: one(mainfest_1.manifestsTable, {
        fields: [exports.assetsTable.manifestId],
        references: [mainfest_1.manifestsTable.id],
    }),
}));
//# sourceMappingURL=assets.js.map