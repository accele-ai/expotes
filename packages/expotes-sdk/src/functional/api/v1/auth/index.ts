/**
 * @packageDocumentation
 * @module api.functional.api.v1.auth
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { CreateUserDto } from "../../../../structures/CreateUserDto";
import type { LoginUserDto } from "../../../../structures/LoginUserDto";
import type { SessionResult } from "../../../../structures/SessionResult";

/**
 * @controller AuthController.login
 * @path POST /api/v1/auth/login
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function login(
  connection: IConnection,
  dto: login.Input,
): Promise<login.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...login.METADATA,
      template: login.METADATA.path,
      path: login.path(),
    },
    dto,
  );
}
export namespace login {
  export type Input = LoginUserDto;
  export type Output = SessionResult;

  export const METADATA = {
    method: "POST",
    path: "/api/v1/auth/login",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = () => "/api/v1/auth/login";
}

/**
 * @controller AuthController.register
 * @path POST /api/v1/auth/register
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function register(
  connection: IConnection,
  dto: register.Input,
): Promise<register.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...register.METADATA,
      template: register.METADATA.path,
      path: register.path(),
    },
    dto,
  );
}
export namespace register {
  export type Input = CreateUserDto;
  export type Output = SessionResult;

  export const METADATA = {
    method: "POST",
    path: "/api/v1/auth/register",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = () => "/api/v1/auth/register";
}

/**
 * @controller AuthController.logout
 * @path POST /api/v1/auth/logout
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function logout(connection: IConnection): Promise<void> {
  return PlainFetcher.fetch(connection, {
    ...logout.METADATA,
    template: logout.METADATA.path,
    path: logout.path(),
  });
}
export namespace logout {
  export const METADATA = {
    method: "POST",
    path: "/api/v1/auth/logout",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = () => "/api/v1/auth/logout";
}
